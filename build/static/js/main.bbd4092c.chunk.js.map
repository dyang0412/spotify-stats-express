{"version":3,"sources":["Actions/GetAudioFeatures.js","Components/SearchItem.js","Actions/SetTrack.js","Components/Loader.js","Components/SearchResults.js","Actions/Search.js","Components/SearchBar.js","Components/ProgressProvider.js","Components/TrackMain.js","Components/RadarChart.js","Components/TrackRadar.js","Components/Watermark.js","Components/TrackInfo.js","Views/Home.js","App.js","serviceWorker.js","Reducers/Search.js","Reducers/AudioFeatures.js","Reducers/Track.js","Reducers/index.js","Store.js","index.js"],"names":["spotify","SpotifyWebApi","getAccessToken","axios","get","then","response","setAccessToken","data","catch","error","console","log","interceptors","use","status","Promise","reject","SearchItem","props","componentDidMount","a","item","artists","entries","value","setState","prevState","artistString","concat","name","formatArtists","state","replace","handleClick","fetchAudioFeatures","id","setTrack","window","innerWidth","toggleNav","onClick","className","src","this","album","images","url","Component","mapDispatchToProps","dispatch","type","getAudioFeaturesForTrack","err","track","connect","features","AudioFeatures","isLoading","Track","Loader","SearchResults","content","xmlns","xmlnsXlink","version","x","y","viewBox","xmlSpace","width","height","style","fill","d","tracks","items","map","index","key","maxHeight","SearchBar","searchTracks","query","fetchTracks","keyPress","e","keyCode","target","input","active","onKeyDown","onChange","placeholder","Search","ProgressProvider","valueStart","valueEnd","children","React","useState","setValue","useEffect","explicit","mode","tempo","loudness","i","Math","round","popularity","text","styles","buildStyles","pathColor","textColor","pathTransitionDuration","time_signature","RadarChart","labels","datasets","borderWidth","borderColor","backgroundColor","pointBackgroundColor","acousticness","danceability","energy","instrumentalness","speechiness","valence","options","title","display","fontSize","position","fontStyle","padding","fontColor","legend","responsive","scale","ticks","beginAtZero","max","min","stepSize","pointLabels","tooltips","callbacks","label","tooltipItem","Home","currState","bind","class","App","exact","path","Boolean","location","hostname","match","initialState","action","combineReducers","store","createStore","rootReducer","compose","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bbd4092c.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport SpotifyWebApi from 'spotify-web-api-js'\r\n\r\nexport const FETCH_FEATURES_REQUEST = 'FETCH_FEATURES_REQUEST'\r\nexport const FETCH_FEATURES_SUCCESS = 'FETCH_FEATURES_SUCCESS'\r\nexport const FETCH_FEATURES_ERROR = 'FETCH_FEATURES_ERROR'\r\n\r\n//Get Access Token\r\nconst spotify = new SpotifyWebApi();\r\ngetAccessToken();\r\n\r\nconst UNAUTHORIZED = 401;\r\naxios.interceptors.response.use(\r\n    response => response,\r\n    error => {\r\n    const {status} = error.response;\r\n    if (status === UNAUTHORIZED) {\r\n        getAccessToken();\r\n    }\r\n    return Promise.reject(error);\r\n    }\r\n);\r\n\r\nfunction getAccessToken() {\r\n    axios.get('https://stats.danyang.dev/access-token')\r\n    .then(response => {\r\n        spotify.setAccessToken(response.data);\r\n    })\r\n    .catch(error => {\r\n        console.log('error')\r\n    })\r\n}\r\n\r\nexport const fetchAudioFeatures = id => async dispatch => {\r\n    await dispatch({ type: FETCH_FEATURES_REQUEST });\r\n    try {\r\n        spotify.getAudioFeaturesForTrack(id)\r\n        .then(\r\n            function(data) {\r\n                return dispatch({\r\n                    type: FETCH_FEATURES_SUCCESS,\r\n                    data: data\r\n                })\r\n            },\r\n            function(error) {\r\n                console.log(error)\r\n            })\r\n    } catch (err) {\r\n        return dispatch({ type: FETCH_FEATURES_ERROR, err });\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchAudioFeatures } from '../Actions/GetAudioFeatures'\r\nimport { setTrack } from '../Actions/SetTrack'\r\n\r\nclass SearchItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            artists: [],\r\n            artistString: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        if(this.props.item){\r\n            for(const [index, value] of this.props.item.artists.entries()) {\r\n                this.setState(prevState => ({\r\n                    artistString: prevState.artistString.concat(`${value.name}, `)\r\n                }))\r\n            }\r\n        }\r\n    }\r\n\r\n    formatArtists = () => {\r\n        var temp = this.state.artistString\r\n        return temp.replace(/(^\\s*,)|(,\\s*$)/g, '')\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.props.fetchAudioFeatures(this.props.id)\r\n        this.props.setTrack(this.props.item)\r\n        if(window.innerWidth <= 1024) {\r\n            this.props.toggleNav()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div onClick={() => this.handleClick()} className=\"search-item block mb-3 text-left\">\r\n                <div className=\"flex flex-row flex-no-wrap justify-start\">\r\n                    <img className=\"inline\" src={this.props.item.album.images[2].url} />\r\n                    <div className=\"track-meta flex flex-col justify-center pl-2 overflow-x-hidden\">\r\n                        <h5 className=\"font-bold whitespace-no-wrap\">{this.props.item.name}</h5>\r\n                        <p className=\"mb-0 whitespace-no-wrap text-sm\">\r\n                            {this.formatArtists()}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//Add state variables to this component as a prop\r\nconst mapStateToProps = state => ({\r\n    features: state.AudioFeatures.features,\r\n    err: state.AudioFeatures.err,\r\n    isLoading: state.AudioFeatures.isLoading,\r\n    track: state.Track.track\r\n});\r\n\r\n//Select which actions are needed\r\nconst mapDispatchToProps = {\r\n    fetchAudioFeatures,\r\n    setTrack\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n    )(SearchItem)\r\n\r\n\r\n","import axios from 'axios'\r\nimport SpotifyWebApi from 'spotify-web-api-js'\r\n\r\nexport const SET_TRACK = 'SET_TRACK'\r\nexport const SET_TRACK_ERROR = 'SET_TRACK_ERROR'\r\n\r\nexport const setTrack = item => async dispatch => {\r\n    await dispatch({ type: SET_TRACK });\r\n    try {\r\n        return dispatch({\r\n            type: SET_TRACK,\r\n            track: item,\r\n        })      \r\n    } catch (err) {\r\n        return dispatch({ type: SET_TRACK_ERROR, err });\r\n    }\r\n}","import React from 'react'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div className=\"flex h-full w-full flex-col justify-center\">\r\n            <div className=\"loader m-auto\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport SearchItem from './SearchItem'\r\nimport Loader from './Loader'\r\nimport SimpleBarReact from \"simplebar-react\";\r\n\r\nimport \"simplebar/src/simplebar.css\";\r\n\r\nfunction SearchResults(props) {\r\n    let content = \r\n        <div className=\"h-full flex flex-col justify-center\">\r\n            <svg className=\"search-icon block mx-auto mb-3 text-gray-600\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                xmlnsXlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\"\r\n                viewBox=\"0 0 56.966 56.966\" xmlSpace=\"preserve\"\r\n                width=\"30px\" height=\"30px\"\r\n                style={{fill:\"#303a52\"}}>\r\n                <path\r\n                d=\"M55.146,51.887L41.588,37.786c3.486-4.144,5.396-9.358,5.396-14.786c0-12.682-10.318-23-23-23s-23,10.318-23,23  s10.318,23,23,23c4.761,0,9.298-1.436,13.177-4.162l13.661,14.208c0.571,0.593,1.339,0.92,2.162,0.92  c0.779,0,1.518-0.297,2.079-0.837C56.255,54.982,56.293,53.08,55.146,51.887z M23.984,6c9.374,0,17,7.626,17,17s-7.626,17-17,17  s-17-7.626-17-17S14.61,6,23.984,6z\" />\r\n            </svg>\r\n            <h4 className=\"font-bold mb-2\">Search for a track to begin</h4>\r\n            <p className=\"text-xs text-gray-600\">All stats provided by Spotify</p>\r\n        </div>\r\n\r\n    if(props.isLoading) {\r\n        content = <Loader />\r\n    }\r\n\r\n    if(props.data && !props.isLoading) {\r\n        content = \r\n        //For each track, display a search item\r\n        props.data.tracks.items.map((item, index) => \r\n            <SearchItem toggleNav={props.toggleNav} key={index} item={item} id={item.id}/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        \r\n        <SimpleBarReact style={{ maxHeight: \"100%\" }} id=\"search-results\" className=\"mt-5 mb-3 flex-1 overflow-x-hidden\">\r\n            { content }\r\n        </SimpleBarReact>\r\n        \r\n    )\r\n}\r\n\r\nexport default SearchResults\r\n","import axios from 'axios'\r\nimport SpotifyWebApi from 'spotify-web-api-js'\r\n\r\nexport const FETCH_TRACKS_REQUEST = 'FETCH_TRACKS_REQUEST'\r\nexport const FETCH_TRACKS_SUCCESS = 'FETCH_TRACKS_SUCCESS'\r\nexport const FETCH_TRACKS_ERROR = 'FETCH_TRACKS_ERROR'\r\n\r\n//Get Access Token\r\nconst spotify = new SpotifyWebApi();\r\ngetAccessToken();\r\n\r\nconst UNAUTHORIZED = 401;\r\naxios.interceptors.response.use(\r\n    response => response,\r\n    error => {\r\n    const {status} = error.response;\r\n    if (status === UNAUTHORIZED) {\r\n        getAccessToken();\r\n    }\r\n    return Promise.reject(error);\r\n    }\r\n);\r\n\r\nfunction getAccessToken() {\r\n    axios.get('https://stats.danyang.dev/access-token')\r\n    .then(response => {\r\n        spotify.setAccessToken(response.data);\r\n    })\r\n    .catch(error => {\r\n        console.log('error')\r\n    })\r\n}\r\n\r\n//Search for tracks\r\nexport const fetchTracks = query => async dispatch => {\r\n    await dispatch({ type: FETCH_TRACKS_REQUEST });\r\n    try {\r\n        spotify.searchTracks(query)\r\n        .then(\r\n            function(data) {\r\n                return dispatch({\r\n                    type: FETCH_TRACKS_SUCCESS,\r\n                    data: data\r\n                });\r\n            },\r\n            function(error) {\r\n                console.log(error)\r\n            })\r\n    } catch (err) {\r\n        return dispatch({ type: FETCH_TRACKS_ERROR, err });\r\n    }\r\n};","import React, { Component } from 'react'\r\nimport SearchResults from './SearchResults'\r\nimport { connect } from 'react-redux'\r\nimport { fetchTracks } from '../Actions/Search'\r\n\r\n\r\nclass SearchBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            input: '',\r\n        }\r\n    }\r\n\r\n    searchTracks = (query) => {\r\n        this.props.fetchTracks(query);\r\n    }\r\n\r\n    keyPress = (e) => {\r\n        if(e.keyCode == 13) {\r\n            this.props.fetchTracks(e.target.value)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"search-bar\" className={`fixed shadow-md inline-block left-0 bg-white h-screen pt-5 px-4 ${this.props.active ? '' : 'collapsed'}`}>\r\n                <div className=\"block h-full text-center\">\r\n                    <div className=\"flex flex-col h-full justify-between\">\r\n                        <div>\r\n                            <h1 className=\"font-bold\">Spotify Stats Home</h1>\r\n                            <div className=\"w-full pt-2 relative mx-auto text-gray-600\">\r\n                                <input type=\"search\" onKeyDown={this.keyPress} onChange={e => this.setState({input: e.target.value})} className=\"w-full border-2 border-gray-300 bg-white h-10 px-3 pr-10 rounded-lg text-sm focus:outline-none\" placeholder=\"Enter Track Name\"/>\r\n                                <button onClick={() => this.searchTracks(this.state.input)} className=\"absolute right-0 top-0 mt-5 mr-4\">\r\n                                    <svg className=\"search-icon text-gray-600 h-4 w-4 fill-current\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        xmlnsXlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\"\r\n                                        viewBox=\"0 0 56.966 56.966\" xmlSpace=\"preserve\"\r\n                                        width=\"512px\" height=\"512px\">\r\n                                        <path\r\n                                        d=\"M55.146,51.887L41.588,37.786c3.486-4.144,5.396-9.358,5.396-14.786c0-12.682-10.318-23-23-23s-23,10.318-23,23  s10.318,23,23,23c4.761,0,9.298-1.436,13.177-4.162l13.661,14.208c0.571,0.593,1.339,0.92,2.162,0.92  c0.779,0,1.518-0.297,2.079-0.837C56.255,54.982,56.293,53.08,55.146,51.887z M23.984,6c9.374,0,17,7.626,17,17s-7.626,17-17,17  s-17-7.626-17-17S14.61,6,23.984,6z\" />\r\n                                    </svg>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <SearchResults toggleNav={this.props.toggleNav} data={this.props.tracks} isLoading={this.props.isLoading}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//Add state variables to this component as a prop\r\nconst mapStateToProps = state => ({\r\n    tracks: state.Search.tracks,\r\n    err: state.Search.err,\r\n    isLoading: state.Search.isLoading\r\n});\r\n\r\n//Select which actions are needed\r\nconst mapDispatchToProps = {\r\n    fetchTracks\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n    )(SearchBar)\r\n\r\n","import React from \"react\";\r\n\r\n// If you don't have a version of React that supports\r\n// hooks, you can use a class-based version of this\r\n// component in ProgressProviderUsingClass.js\r\nconst ProgressProvider = ({ valueStart, valueEnd, children }) => {\r\n  const [value, setValue] = React.useState(valueStart);\r\n  React.useEffect(() => {\r\n    setValue(valueEnd);\r\n  }, [valueEnd]);\r\n\r\n  return children(value);\r\n};\r\nexport default ProgressProvider;\r\n","import React, { Component, useState, setState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CircularProgressbar, buildStyles  } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport ProgressProvider from \"./ProgressProvider\";\r\n\r\n\r\nfunction TrackMain (props) {\r\n    \r\n    let content = null\r\n    let explicit = null\r\n    let key = ''\r\n    let mode = ''\r\n    let tempo = null\r\n    let loudness = null\r\n    var artistString = ''\r\n \r\n    const formatArtists = () => {\r\n        var temp = artistString\r\n        return temp.replace(/(^\\s*,)|(,\\s*$)/g, '')\r\n    }\r\n\r\n    if(props.track) {\r\n        if(props.track.explicit) {\r\n            explicit = \r\n            <div className=\"explicit-tag inline-block\">EXPLICIT</div>\r\n        }\r\n        props.track.artists.map((item, i) => {\r\n            artistString = artistString + `${item.name}, `\r\n            //console.log(item.name)\r\n        })\r\n        //console.log(artistString)\r\n    }\r\n\r\n    if(props.features) {\r\n        switch(props.features.key) {\r\n            case 0:\r\n                key = 'C'\r\n                break\r\n            case 1:\r\n                key = 'C♯'\r\n                break\r\n            case 2:\r\n                key = 'D'\r\n                break\r\n            case 3:\r\n                key = 'D♯'\r\n                break\r\n            case 4:\r\n                key = 'E'\r\n                break\r\n            case 5:\r\n                key = 'F'\r\n                break\r\n            case 6: \r\n                key = 'F♯'\r\n                break\r\n            case 7: \r\n                key = 'G'\r\n                break\r\n            case 8: \r\n                key = 'G♯'\r\n                break\r\n            case 9:\r\n                key = 'A'\r\n                break\r\n            case 10: \r\n                key = 'A♯'\r\n                break\r\n            case 11: \r\n                key = 'B'\r\n                break\r\n        }\r\n        switch(props.features.mode) {\r\n            case 0: \r\n                mode = 'major'\r\n                break\r\n            case 1:\r\n                mode = 'minor'\r\n                break\r\n        }\r\n        tempo = Math.round(props.features.tempo)\r\n        loudness = Math.round(props.features.loudness)\r\n    }    \r\n\r\n    if(props.features && props.track) {\r\n        content = \r\n        <div className=\"track-card bg-white shadow-lg\">\r\n            <div className=\"flex flex-wrap\">\r\n                <div className=\"w-full xl:w-2/5 xl:block hidden\">\r\n                    <img id=\"track-img\" className=\"inline-block\" src={props.track.album.images[0].url} />\r\n                </div>\r\n                <div className=\"w-full xl:w-3/5\">\r\n                    <div className=\"h-full flex flex-col justify-between xl:pt-6 xl:pl-6\">\r\n                        <div className=\"track-header flex sm:flex-row flex-col\">\r\n                            <img id=\"track-img-sm\" className=\"inline-block xl:hidden\" src={props.track.album.images[0].url} />\r\n                            <div>\r\n                                <h1 className=\"track-name font-bold\">{props.track.name}</h1>\r\n                                <h2 className=\"text-2xl font-medium mb-1\">{formatArtists()}</h2>\r\n                                {explicit}\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"track-body h-full flex flex-col justify-end\">\r\n                            <div className=\"flex flex-wrap\">\r\n                                <div className=\"xl:w-2/5 w-full\">\r\n                                    <h2 className=\"feature-label\">Popularity</h2>\r\n                                    <div className=\"px-10\">\r\n                                        <ProgressProvider valueStart={0} valueEnd={props.track.popularity}>\r\n                                            {value => <CircularProgressbar value={value} text={`${value}%`} styles={buildStyles({pathColor:'fc5185', textColor:'fc5185',pathTransitionDuration: 0.8})}/>}\r\n                                        </ProgressProvider>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"xl:w-3/5 w-full\">\r\n                                    <div className=\"flex flex-wrap feature-row\">\r\n                                        <div className=\"w-1/2 feature-box\">\r\n                                            <h2 className=\"feature-label\">Key</h2>\r\n                                            <h1 className=\"track-key\">{key}<span className=\"track-mode\">{mode}</span></h1>\r\n                                        </div>\r\n                                        <div className=\"w-1/2 feature-box\">\r\n                                            <h2 className=\"feature-label\">Time</h2>\r\n                                            <span className=\"time-sig\">{props.features.time_signature}</span><span className=\"time-sig-after\">4</span>\r\n                                        </div>\r\n                                        <div className=\"w-1/2 feature-box\">\r\n                                            <h2 className=\"feature-label\">Tempo</h2>\r\n                                            <h1 className=\"track-tempo\">{tempo}<span>BPM</span></h1>\r\n                                        </div>\r\n                                        <div className=\"w-1/2 feature-box\">\r\n                                            <h2 className=\"feature-label\">Loudness</h2>\r\n                                            <h1 className=\"track-loudness\">{loudness}<span>dB</span></h1>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n//Add state variables to this component as a prop\r\nconst mapStateToProps = state => ({\r\n    features: state.AudioFeatures.features,\r\n    err: state.AudioFeatures.err,\r\n    isLoading: state.AudioFeatures.isLoading,\r\n    track: state.Track.track,\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    )(TrackMain)\r\n\r\n","import React, { Component } from 'react'\r\nimport {Radar} from 'react-chartjs-2';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass RadarChart extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"flex flex-col justify-center h-full\">\r\n                <Radar id=\"radar\"\r\n                    data={{\r\n                        labels: ['Acousticness', 'Danceability', 'Energy', 'Instrumentalness', 'Speechiness', 'Valence'],\r\n                        datasets: [\r\n                            {\r\n                                borderWidth: 2,\r\n                                borderColor: 'rgba(252, 81, 133, 1)',\r\n                                backgroundColor: 'rgba(252, 81, 133, 0.1)',\r\n                                pointBackgroundColor: 'rgba(252, 81, 133, 1)',\r\n                                data: \r\n                                    [Math.round(this.props.features.acousticness * 100),\r\n                                    Math.round(this.props.features.danceability * 100),\r\n                                    Math.round(this.props.features.energy * 100),\r\n                                    Math.round(this.props.features.instrumentalness * 100),\r\n                                    Math.round(this.props.features.speechiness * 100),\r\n                                    Math.round(this.props.features.valence * 100)]\r\n                            }\r\n                        ],\r\n                    }}\r\n                    width={100}\r\n                    height={68}\r\n                    options={{\r\n                        title:{\r\n                            display:true,\r\n                            text:'Audio Features',\r\n                            fontSize:25,\r\n                            position: \"top\",\r\n                            fontStyle: \"600\",\r\n                            padding: 20,\r\n                            fontColor: '#303a52'\r\n                        },\r\n                        legend:{\r\n                            display:false,\r\n                        },\r\n                        responsive: true,\r\n                        scale: {\r\n                            ticks: {\r\n                                beginAtZero: true,\r\n                                max: 100,\r\n                                min: 0,\r\n                                stepSize: 10\r\n                            },\r\n                            pointLabels: {\r\n                                fontSize: 16,\r\n                                fontColor: '#303a52',\r\n                                fontStyle: 'bold'\r\n                            }\r\n                        },\r\n                        tooltips: {\r\n                            mode: 'index',\r\n                            callbacks: {\r\n                                label: function(tooltipItem, data) {\r\n                                    return data['datasets'][0]['data'][tooltipItem['index']] + '%';\r\n                                },\r\n                                title: function(tooltipItem, data) {\r\n                                    return data['labels'][tooltipItem[0]['index']];\r\n                                },\r\n                            }\r\n                        },\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//Add state variables to this component as a prop\r\nconst mapStateToProps = state => ({\r\n    features: state.AudioFeatures.features,\r\n    err: state.AudioFeatures.err,\r\n    isLoading: state.AudioFeatures.isLoading,\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    )(RadarChart)\r\n","import React from 'react'\r\nimport RadarChart from './RadarChart'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction TrackRadar(props) {\r\n\r\n    let content = null\r\n\r\n    if(props.features) {\r\n        content = \r\n        <RadarChart />\r\n    }\r\n\r\n    return (\r\n        <div className=\"track-card bg-white shadow-lg mt-5\">\r\n            {content}\r\n            <div id=\"feature-descriptions\">\r\n                <div className=\"desc\">\r\n                    <strong>Acousticness: </strong>A confidence measure of whether the track is acoustic.\r\n                </div>\r\n                <div className=\"desc\">\r\n                    <strong>Danceability: </strong>Describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity.\r\n                </div>\r\n                <div className=\"desc\">\r\n                    <strong>Energy: </strong>Represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. \r\n                </div>\r\n                <div className=\"desc\">\r\n                    <strong>Instrumentalness: </strong>Predicts whether a track contains no vocals. “Ooh” and “aah” sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly “vocal”.\r\n                </div>\r\n                <div className=\"desc\">\r\n                    <strong>Speechiness: </strong>Detects the presence of spoken words in a track.\r\n                </div>\r\n                <div className=\"desc\">\r\n                    <strong>Valence: </strong>Describes the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric)\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//Add state variables to this component as a prop\r\nconst mapStateToProps = state => ({\r\n    features: state.AudioFeatures.features,\r\n    err: state.AudioFeatures.err,\r\n    isLoading: state.AudioFeatures.isLoading,\r\n    track: state.Track.track,\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    )(TrackRadar)\r\n\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nfunction Watermark(props) {\r\n    let content = null\r\n\r\n    if(props.track) {\r\n        content = <span>{props.track.name}</span>\r\n    }\r\n\r\n    return (\r\n        <h1 className=\"watermark\">{content} {content} {content} {content} {content}</h1>\r\n    )\r\n}\r\n\r\n\r\n\r\n//Add state variables to this component as a prop\r\nconst mapStateToProps = state => ({\r\n    track: state.Track.track,\r\n    err: state.AudioFeatures.err,\r\n    isLoading: state.AudioFeatures.isLoading,\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    )(Watermark)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport TrackMain from './TrackMain'\r\nimport TrackRadar from './TrackRadar'\r\nimport Watermark from './Watermark'\r\n\r\nfunction TrackInfo(props) {\r\n\r\n    let content = null\r\n\r\n    if(props.track) {\r\n        content =\r\n        <div id=\"trackInfo\" className={`min-h-screen ${props.active ? 'collapsed' : ''}`}>\r\n            <div className=\"trackInfo-inner\">\r\n                <TrackMain />\r\n                <TrackRadar />\r\n            </div>\r\n            <Watermark />\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n//Add state variables to this component as a prop\r\nconst mapStateToProps = state => ({\r\n    features: state.AudioFeatures.features,\r\n    err: state.AudioFeatures.err,\r\n    isLoading: state.AudioFeatures.isLoading,\r\n    track: state.Track.track,\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    )(TrackInfo)\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport SearchBar from '../Components/SearchBar'\r\nimport TrackInfo from '../Components/TrackInfo'\r\n\r\nexport default class Home extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            active: true,\r\n        }\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n    }\r\n\r\n    toggleNav = () => {\r\n        const currState = this.state.active;\r\n        this.setState({ active: !currState })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <div id=\"topNav\">\r\n                    <button onClick={this.toggleNav} class={`navbar-toggler border-0 ${this.state.active ? '' : 'collapsed'}`} id=\"toggler-1\">\r\n                        <span></span> \r\n                        <span></span> \r\n                        <span></span>\r\n                    </button>\r\n                </div>\r\n                <div id=\"mast-content\">\r\n                    <SearchBar toggleNav={this.toggleNav} active={this.state.active}></SearchBar> \r\n                    <TrackInfo active={this.state.active} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\"\nimport Home from './Views/Home'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Router>\n            <header className=\"App-header\">\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Home />\n                    </Route>\n                </Switch>\n            </header>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    FETCH_TRACKS_REQUEST,\r\n    FETCH_TRACKS_SUCCESS,\r\n    FETCH_TRACKS_ERROR\r\n} from '../Actions/Search'\r\n\r\nconst initialState = {\r\n    tracks: null,\r\n    err: null,\r\n    isLoading: false\r\n}\r\n\r\nconst Search = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_TRACKS_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case FETCH_TRACKS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                tracks: action.data,\r\n                isLoading: false\r\n            };\r\n        case FETCH_TRACKS_ERROR:\r\n            return { err: action.err, isLoading: false };\r\n        default:\r\n            return state;\r\n    }\r\n  };\r\n  \r\n  export default Search;\r\n  \r\n\r\n/* const initialState = {\r\n    data: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"SEARCH\":\r\n            axios.get('http://localhost:5000/search-track/'+action.query)\r\n                .then(response => {\r\n                    console.log(response.data)\r\n                    return Object.assign({}, state, {\r\n                        data: response.data\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    console.log('Error')\r\n                    return Object.assign({}, state, {\r\n                        data: null\r\n                    })\r\n                })\r\n        default:\r\n            return state\r\n    }\r\n} */","import {\r\n    FETCH_FEATURES_REQUEST,\r\n    FETCH_FEATURES_SUCCESS,\r\n    FETCH_FEATURES_ERROR\r\n} from '../Actions/GetAudioFeatures'\r\n\r\nconst initialState = {\r\n    features: null,\r\n    err: null,\r\n    isLoading: false\r\n}\r\n\r\nconst AudioFeatures = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_FEATURES_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case FETCH_FEATURES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                features: action.data,\r\n                isLoading: false\r\n            };\r\n        case FETCH_FEATURES_ERROR:\r\n            return { err: action.err, isLoading: false };\r\n        default:\r\n            return state;\r\n    }\r\n  };\r\n  \r\nexport default AudioFeatures;\r\n","import {\r\n    SET_TRACK,\r\n    SET_TRACK_ERROR\r\n} from '../Actions/SetTrack'\r\n\r\nconst initialState = {\r\n    track: null,\r\n    err: null,\r\n    artists: null,\r\n}\r\n\r\nconst Track = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TRACK:\r\n            return {\r\n                ...state,\r\n                track: action.track,\r\n            };\r\n        case SET_TRACK_ERROR:\r\n            return { err: action.err };\r\n        default:\r\n            return state;\r\n    }\r\n  };\r\n  \r\nexport default Track;\r\n","import { combineReducers } from \"redux\";\r\nimport Search from \"./Search\";\r\nimport AudioFeatures from \"./AudioFeatures\";\r\nimport Track from \"./Track\";\r\n\r\nexport default combineReducers({\r\n    Search,\r\n    AudioFeatures,\r\n    Track\r\n});\r\n","import { createStore, compose, applyMiddleware } from 'redux'\r\nimport rootReducer from './Reducers/index'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk)))\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './tailwind.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './Store'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}